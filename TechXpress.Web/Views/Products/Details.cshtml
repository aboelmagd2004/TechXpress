@model TechXpress.Web.ViewModels.Products.ProductDetailsViewModel
@using System.Security.Claims

<!-- Product Details Section -->
<div class="product-details">
    <h1>@Model.Product.Name</h1>
    <p><strong>Category:</strong> @Model.Product.Category?.Name</p>
    <p><strong>Description:</strong> @Model.Product.Description</p>
    <p><strong>Price:</strong> $@Model.Product.Price.ToString("0.00")</p>

    <!-- Product Rating -->
    <div class="rating">
        @for (int i = 0; i < 5; i++)
        {
            <i class="@(i < Model.AverageRating ? "fas" : "far") fa-star @(i < Model.AverageRating ? "text-warning" : "text-muted")"></i>
        }
        <span class="ms-2">(@Model.ReviewCount reviews)</span>
    </div>

    <!-- Add to Cart -->
    <form asp-action="AddToCart" method="post">
        <input type="hidden" name="productId" value="@Model.Product.Id" />
        <button type="submit" class="btn btn-primary">Add to Cart</button>
    </form>
</div>

<!-- Reviews Section -->
<div class="tab-pane fade show active" id="reviews" role="tabpanel">
    @if (Model?.Reviews != null && Model.Reviews.Any())
    {
        foreach (var review in Model.Reviews)
        {
            <div class="review mb-4">
                <div class="review-header d-flex justify-content-between align-items-center">
                    <h5>
                        @(string.IsNullOrEmpty(review.User?.FirstName) || string.IsNullOrEmpty(review.User?.LastName)
                            ? "Unknown User"
                            : review.User.FirstName + " " + review.User.LastName)
                    </h5>
                    <div class="rating">
                        @for (int i = 0; i < 5; i++)
                        {
                            <i class="@(i < review.Rating ? "fas" : "far") fa-star @(i < review.Rating ? "text-warning" : "text-muted")"></i>
                        }
                    </div>
                    @if (User.Identity != null && User.Identity.IsAuthenticated && User.FindFirstValue(ClaimTypes.NameIdentifier) == review.UserId)
                    {
                        <form asp-action="DeleteReview" method="post" class="ms-3">
                            <input type="hidden" name="id" value="@review.Id" />
                            <input type="hidden" name="productId" value="@Model.Product.Id" />
                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                Delete
                                <i class="fas fa-trash"></i>
                            </button>
                        </form>
                    }
                </div>

                <div class="review-date text-muted small mb-2">
                    @review.CreatedAt.ToString("MMMM dd, yyyy")
                    @if (review.UpdatedAt.HasValue)
                    {
                        <span class="text-muted">(edited)</span>
                    }
                </div>
                <p>@review.Comment</p>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info">
            No reviews yet. Be the first to review!
        </div>
    }

    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <!-- Review Submission Form -->
        <form asp-action="AddReview" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" name="ProductId" value="@Model.Product.Id" />
            <input type="hidden" name="UserId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />

            <div class="mb-3">
                <label for="Rating" class="form-label">Rating</label>
                <select name="Rating" class="form-select" required>
                    <option value="">Select Rating</option>
                    @for (int i = 1; i <= 5; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
                <span class="text-danger" asp-validation-for="@Model.NewReview.Rating"></span>
            </div>

            <div class="mb-3">
                <label for="Comment" class="form-label">Comment</label>
                <textarea name="Comment" class="form-control" rows="4" placeholder="Write your review here..."></textarea>
                <span class="text-danger" asp-validation-for="@Model.NewReview.Comment"></span>
            </div>

            <button type="submit" class="btn btn-success">Submit Review</button>
        </form>
    }
    else
    {
        <div class="alert alert-info">
            Please <a asp-controller="Account" asp-action="Login">login</a> to leave a review.
        </div>
    }
</div>

<!-- Similar Products Section -->
@if (Model.SimilarProducts != null && Model.SimilarProducts.Any())
{
    <div class="similar-products mt-5">
        <h3>Similar Products</h3>
        <div class="row">
            @foreach (var similarProduct in Model.SimilarProducts)
            {
                <div class="col-md-3">
                    <div class="card">
                        <img src="/@similarProduct.ImageUrl" class="card-img-top" alt="@similarProduct.Name" />
                        <div class="card-body">
                            <h5 class="card-title">@similarProduct.Name</h5>
                            <p class="card-text">$@similarProduct.Price.ToString("0.00")</p>
                            <a href="@Url.Action("Details", "Products", new { id = similarProduct.Id })" class="btn btn-primary">View Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
