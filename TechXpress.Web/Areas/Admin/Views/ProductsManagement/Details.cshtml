@using TechXpress.Data.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model ProductViewModel

@{
    ViewData["Title"] = "Product Details";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow-lg rounded">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0"><i class="bi bi-box-seam"></i> Product Details</h3>
            <div>
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning btn-sm me-2"><i class="bi bi-pencil-square"></i> Edit</a>
                <a asp-action="Index" class="btn btn-secondary btn-sm"><i class="bi bi-arrow-left-circle"></i> Back to List</a>
            </div>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4 text-center">
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid rounded border" style="max-height: 250px;" />
                    }
                    else
                    {
                        <img src="~/images/no-image.png" alt="No Image" class="img-fluid rounded border" />
                    }
                </div>
                <div class="col-md-8">
                    <table class="table table-bordered table-striped">
                        <tbody>
                            <tr>
                                <th>Name</th>
                                <td>@Model.Name</td>
                            </tr>
                            <tr>
                                <th>Description</th>
                                <td>@Model.Description</td>
                            </tr>
                            <tr>
                                <th>Price</th>
                                <td>$@Model.Price.ToString("F2")</td>
                            </tr>
                            <tr>
                                <th>Stock Quantity</th>
                                <td>@Model.StockQuantity</td>
                            </tr>
                            <tr>
                                <th>Is Featured</th>
                                <td>@(Model.IsFeatured ? "Yes" : "No")</td>
                            </tr>
                            <tr>
                                <th>Is Active</th>
                                <td>@(Model.IsActive ? "Yes" : "No")</td>
                            </tr>
                            <tr>
                                <th>SKU</th>
                                <td>@Model.SKU</td>
                            </tr>
                            <tr>
                                <th>Category</th>
                                <td>@Model.Category?.Name ?? "N/A"</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <hr />
            <h5 class="mt-4 mb-3"><i class="bi bi-gear-fill"></i> Specifications</h5>

            @if (Model.Specifications != null && Model.Specifications.Any())
            {
                <table class="table table-sm table-hover table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Key</th>
                            <th>Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var spec in Model.Specifications)
                        {
                            <tr>
                                <td>@spec.Key</td>
                                <td>@spec.Value</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-muted">No specifications available.</p>
            }
        </div>
    </div>
</div>
