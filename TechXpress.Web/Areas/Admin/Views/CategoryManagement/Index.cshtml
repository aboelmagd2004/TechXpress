@model IEnumerable<TechXpress.Data.Models.Category>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Categories Management";
}

<div class="page-header">
    <h2>@ViewData["Title"]</h2>
    <a asp-action="Create" class="btn btn-success">
        <i class="fas fa-plus-circle"></i> Create New
    </a>
</div>

<div class="card">
    <div class="card-header d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-2">
        <h4 class="mb-0">Category List</h4>
        <div class="d-flex flex-column flex-md-row gap-2">
            <div class="input-group input-group-sm" style="width: 250px;">
                <input type="text" id="searchInput" class="form-control" placeholder="Search categories...">
                <button class="btn btn-outline-secondary" type="button" id="clearSearch">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="btn-group btn-group-sm" role="group">
                <button type="button" class="btn btn-outline-primary active" id="showAll">All</button>
                <button type="button" class="btn btn-outline-success" id="showActive">Active</button>
                <button type="button" class="btn btn-outline-danger" id="showInactive">Inactive</button>
            </div>
        </div>
    </div>

    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table id="categoriesTable" class="table table-hover data-table" style="width:100%">
                    <thead class="thead-light">
                        <tr>
                            <th>#</th>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Slug</th>
                            <th>Products</th>
                            <th>Status</th>
                            <th class="no-export">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in Model.OrderBy(c => c.DisplayOrder).ThenBy(c => c.Name))
                        {
                            <tr data-status="@(category.IsActive ? "active" : "inactive")">
                                <td data-order="@category.DisplayOrder">@category.DisplayOrder</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(category.ImageUrl))
                                    {
                                        <img src="@category.ImageUrl" alt="@category.Name"
                                             class="category-thumbnail"
                                             data-toggle="modal"
                                             data-target="#imageModal"
                                             data-image="@category.ImageUrl" />
                                    }
                                    else
                                    {
                                        <div class="no-image-placeholder">
                                            <i class="fas fa-folder"></i>
                                        </div>
                                    }
                                </td>
                                <td>
                                    <div class="d-flex flex-column">
                                        <span class="fw-bold">@category.Name</span>
                                        @if (!string.IsNullOrEmpty(category.Description))
                                        {
                                            <small class="text-muted text-truncate" style="max-width: 200px;"
                                                   title="@Html.Raw(System.Net.WebUtility.HtmlEncode(category.Description))">
                                                @Html.Raw(category.Description.Length > 50 ?
                                                         System.Net.WebUtility.HtmlEncode(category.Description.Substring(0, 50)) + "..." :
                                                         System.Net.WebUtility.HtmlEncode(category.Description))
                                            </small>
                                        }
                                    </div>
                                </td>
                                <td>@category.Slug</td>
                                <td>
                                    <span class="badge bg-info rounded-pill">@category.ProductCount</span>
                                </td>
                                <td>
                                    <span class="badge @(category.IsActive ? "bg-success" : "bg-secondary")">
                                        @(category.IsActive ? "Active" : "Inactive")
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@category.Id"
                                           class="btn btn-outline-info" title="Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@category.Id"
                                           class="btn btn-outline-primary" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@category.Id"
                                           class="btn btn-outline-danger" title="Delete"
                                           onclick="return confirm('Are you sure you want to delete this category?')">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info text-center py-4">
                <div class="py-3">
                    <i class="fas fa-folder-open fa-3x text-primary mb-3"></i>
                    <h4>No Categories Found</h4>
                    <p class="text-muted">Get started by creating your first category</p>
                    <a asp-action="Create" class="btn btn-primary mt-2">
                        <i class="fas fa-plus"></i> Create Category
                    </a>
                </div>
            </div>
        }
    </div>

    @if (Model.Any())
    {
        <div class="card-footer d-flex justify-content-between align-items-center">
            <div class="text-muted small">
                Showing <strong>@Model.Count()</strong> categories
            </div>
            <a asp-controller="Dashboard" asp-action="Index" class="btn btn-sm btn-outline-secondary">
                <i class="fas fa-arrow-left"></i> Back to Dashboard
            </a>
        </div>
    }
</div>

<!-- Image Preview Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Category Image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" class="img-fluid" alt="Category Image">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .category-thumbnail {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 4px;
            cursor: pointer;
            transition: transform 0.2s;
        }

            .category-thumbnail:hover {
                transform: scale(1.1);
            }

        .no-image-placeholder {
            width: 40px;
            height: 40px;
            background: #f8f9fa;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #adb5bd;
        }

        .badge.rounded-pill {
            padding-right: 0.6em;
            padding-left: 0.6em;
        }

        .table td, .table th {
            vertical-align: middle;
        }

        .btn-group-sm > .btn {
            padding: 0.25rem 0.5rem;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Check if DataTable is already initialized
            if (!$.fn.dataTable.isDataTable('#categoriesTable')) {
                // Initialize DataTable
                var table = $('#categoriesTable').DataTable({
                    responsive: true,
                    dom: '<"top"<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>>rt<"bottom"<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>>',
                    columnDefs: [
                        {
                            targets: 'no-export',
                            orderable: false,
                            searchable: false
                        },
                        {
                            targets: [1, 7], // Image and Actions columns
                            orderable: false
                        }
                    ],
                    language: {
                        search: "_INPUT_",
                        searchPlaceholder: "Search categories...",
                        lengthMenu: "Show _MENU_ categories"
                    }
                });
            }

            // Image modal functionality
            $('#imageModal').on('show.bs.modal', function(event) {
                var button = $(event.relatedTarget);
                var imageUrl = button.data('image');
                var modal = $(this);
                modal.find('#modalImage').attr('src', imageUrl);
                modal.find('.modal-title').text(button.attr('alt') + ' Image');
            });

            // Search functionality
            $("#searchInput").on("keyup", function() {
                table.search($(this).val()).draw();
            });

            $("#clearSearch").click(function() {
                $("#searchInput").val('');
                table.search('').draw();
            });

            // Filter by status
            $("#showAll").click(function() {
                $.fn.dataTable.ext.search.length = 0; // Clear previous filters
                table.columns().search('').draw();
                setActiveButton($(this));
            });

            $("#showActive").click(function() {
                $.fn.dataTable.ext.search.length = 0; // Clear previous filters
                $.fn.dataTable.ext.search.push(
                    function(settings, data, dataIndex) {
                        return $(table.row(dataIndex).node()).data('status') === 'active';
                    }
                );
                table.draw();
                setActiveButton($(this));
            });

            $("#showInactive").click(function() {
                $.fn.dataTable.ext.search.length = 0; // Clear previous filters
                $.fn.dataTable.ext.search.push(
                    function(settings, data, dataIndex) {
                        return $(table.row(dataIndex).node()).data('status') === 'inactive';
                    }
                );
                table.draw();
                setActiveButton($(this));
            });

            function setActiveButton(button) {
                $(".btn-group .btn").removeClass("active btn-primary btn-success btn-danger")
                                   .addClass("btn-outline-primary btn-outline-success btn-outline-danger");
                button.removeClass("btn-outline-primary btn-outline-success btn-outline-danger");

                if (button.attr("id") === "showActive") {
                    button.addClass("active btn-success");
                } else if (button.attr("id") === "showInactive") {
                    button.addClass("active btn-danger");
                } else {
                    button.addClass("active btn-primary");
                }
            }
        });
    </script>
}
